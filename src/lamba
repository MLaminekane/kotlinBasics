fun main() {
    println("Hello, World!")

//    fun uppercaseString(text: String): String {
//        return text.uppercase()
//    }
//    ou
//    val upperCaseString = { text: String -> text.uppercase() }
//    fun main() {
//        println(upperCaseString("hello")) // Résultat : HELLO
//    }

    //sans paramètre il n’est pas nécessaire d’utiliser ->
    val logMessage = { println("Message de log") }
    logMessage() // Résultat : Message de log

    //Passer une lambda comme paramètre
    fun main() {
        val numbers = listOf(1, -2, 3, -4, 5, -6)
        // Lambda directement dans .filter()
        val positives = numbers.filter { x -> x > 0 }
        // Lambda assignée à une variable
        val isNegative = { x: Int -> x < 0 }
        val negatives = numbers.filter(isNegative)
        println(positives) // Résultat : [1, 3, 5]
        println(negatives) // Résultat : [-2, -4, -6]
    }

    //Transformer des éléments avec .map()
    fun main() {
        val numbers = listOf(1, -2, 3, -4, 5, -6)
        // Lambda directement dans .map()
        val doubled = numbers.map { x -> x * 2 }
        // Lambda assignée à une variable
        val isTripled = { x: Int -> x * 3 }
        val tripled = numbers.map(isTripled)
        println(doubled) // Résultat : [2, -4, 6, -8, 10, -12]
        println(tripled) // Résultat : [3, -6, 9, -12, 15, -18]
    }
}